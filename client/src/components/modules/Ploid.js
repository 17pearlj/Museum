/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/assets/ploid.glb')

//   console.log("This is the good stuff",materials['White.002'])

  const { actions } = useAnimations(animations, group)

  // let eyeColor = props.state.items.eyes;
  // console.log(props.state.items.eyes,"yo whatlscsdvs")


  return (
    <group ref={group} {...props} dispose={null}
    // onClick={(e) => {e.stopPropagation(); console.log(props); (props.state.current = e.object.material.name)}}
    >
      <group
        name="CharacterArmature"
        position={[0, 0, 0]}
        rotation={[1.33, -0.02, -0.06]}>
        <primitive object={nodes.Root} />
        <skinnedMesh
          geometry={nodes.CUBezierCurve010.geometry}
          material={nodes.CUBezierCurve010.material}
          skeleton={nodes.CUBezierCurve010.skeleton}
          material-color= {props.clothes}
        />
        <skinnedMesh
          geometry={nodes.CUBezierCurve010_1.geometry}
          material={nodes.CUBezierCurve010_1.material}
          skeleton={nodes.CUBezierCurve010_1.skeleton}
          material-color= {props.body}
        />
        <skinnedMesh
          geometry={nodes.CUBezierCurve009.geometry}
          material={nodes.CUBezierCurve009.material}
          skeleton={nodes.CUBezierCurve009.skeleton}
          // material-color= "#FFA500"
        />
        <skinnedMesh
          geometry={nodes.CUBezierCurve009_1.geometry}
          material={nodes.CUBezierCurve009_1.material}
          skeleton={nodes.CUBezierCurve009_1.skeleton}
          // material-color= "#FFA500"
        />
        <skinnedMesh
          geometry={nodes.CUBezierCurve009_2.geometry}
          material={materials['Main2.002']}
          skeleton={nodes.CUBezierCurve009_2.skeleton}
          material-color= {props.chest}
        />
        <skinnedMesh
          geometry={nodes.Ears.geometry}
          material={nodes.Ears.material}
          skeleton={nodes.Ears.skeleton}
        //   material-color= "#FFA500"
        />
        <skinnedMesh
          geometry={nodes.CUBezierCurve008.geometry}
          material={nodes.CUBezierCurve008.material}
          skeleton={nodes.CUBezierCurve008.skeleton}
        //   material-color= "#FFA500"
        />
        <skinnedMesh
          geometry={nodes.CUBezierCurve008_1.geometry}
          material={nodes.CUBezierCurve008_1.material}
          skeleton={nodes.CUBezierCurve008_1.skeleton}
        //   material-color= "#FFA500"
        />
        <skinnedMesh
          geometry={nodes.CUBezierCurve008_2.geometry}
          material={materials['Black.002']}
          skeleton={nodes.CUBezierCurve008_2.skeleton}
        //   material-color= "#FFA500"
        />
        <skinnedMesh
          geometry={nodes.CUBezierCurve008_3.geometry}
          material={materials['White.002']}
          skeleton={nodes.CUBezierCurve008_3.skeleton}
        />
        <skinnedMesh
          geometry={nodes.CUBezierCurve008_4.geometry}
          material={materials['EyeColor.002']}
          skeleton={nodes.CUBezierCurve008_4.skeleton}
          material-color={props.eyes}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/assets/ploid.glb')
